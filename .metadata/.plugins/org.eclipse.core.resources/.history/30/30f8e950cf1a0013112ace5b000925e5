package cont;

import java.io.File;
import java.io.IOException;
import java.net.InetSocketAddress;
import java.nio.ByteBuffer;
import java.nio.channels.ServerSocketChannel;
import java.nio.channels.SocketChannel;


public class MainHost {

	ServerSocketChannel channel;
	ByteBuffer std;
	
	private static int getPort(){
		return 12345;
	}
	
	public MainHost(){
	}
	class Message{
		public static final String LOGIN = "LOGIN";
		public static final String REGISTER = "REGISTER";
		public static final int EXIT = 3;
		public static final int UNEXPECTED_EXIT = 4;
		private String number;
		private String type;
		Message(){
			number = "";
			type = "";
		}
		public void setNumber(String l){
			number = l;
		}
		public String getNumber(){
			return number;
		}
		public void setType(String t){
			type = t;
		}
		public String getType(){
			return type;
		}
	}
	
	private void sendBuffer(SocketChannel socket){
		
		while(std.hasRemaining()){
			try {
				socket.write(std);
			} catch (IOException e) {
				e.printStackTrace();
			}
		}
		std.flip();
		std.clear();
	}
	
	public Message getMessage(SocketChannel socket){
		
		std.clear();
		int ret = 0;
		try {
			ret = socket.read(std);
		} catch (IOException e) {
			System.out.println("B³¹d przy odczytaniu wiadomoœci");
		}
		if(ret == -1){
			Message mes = new Message();
			mes.setType(Message.UNEXPECTED_EXIT);
			return mes;
		}
		std.flip();
		
		byte[] bytes = new byte[4];

		for(int i = 0; i<4; i++)
			bytes[i] = std.get();
		
		String message = new String(bytes);
		Message mes = new Message();
		if(message.equals("List")){
			mes.setType(Message.LIST);
		}
		if(message.equals("Get;")){
			byte[] num = new byte[10];
			int i = 0;
			while(std.position() < std.limit())
				num[i++] = std.get();
			mes.setType(Message.GET);
			mes.setNumber(Integer.parseInt(new String(num,0,i)));
		}
		if(message.equals("Exit")){
			mes.setType(Message.EXIT);
		}
		return mes;
	}
	
	
	private void putStringIntoBuffer(String s){
		std.clear();
		std.put(s.getBytes());
		std.flip();
	}
	
	private void sendMessage(String message,SocketChannel socket){
		putStringIntoBuffer(message);
		sendBuffer(socket);
	}
	public static void main(String[] args) {
		

	}

}
